version: 2
jobs:
  test:
    docker:
      - image: govau/dta-website-rebuild:latest
        # Gotcha - if you DONT specify command, then the entrypoint in the image
        # is not run either. But we start the application further down just before running
        # the integration tests.
        environment:
          VCAP_SERVICES: "{\"mysql\":[{\"binding_name\":null,\"credentials\":{\"host\":\"db\",\"name\":\"drupal\",\"password\":\"password\",\"port\":3306,\"username\":\"drupal\"},\"label\":\"mysql\",\"name\": \"dta-website-rebuild-db\",\"tags\":[\"mysql\"]}],\"user-provided\":[{\"credentials\":{\"SMTP_PASSWORD\":\"password\"},\"instance_name\":\"ups-website-redev\",\"label\":\"user-provided\",\"name\":\"ups-website-redev\",\"syslog_drain_url\":\"\",\"tags\":[],\"volume_mounts\":[]},{\"binding_name\":null,\"credentials\":{\"access_key\":\"AKIAIFOO\",\"secret_key\":\"BAR\"},\"instance_name\":\"ups-aws\",\"label\":\"user-provided\",\"name\":\"ups-aws\",\"syslog_drain_url\":\"\",\"tags\":[],\"volume_mounts\":[]}]}"
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: drupal
          MYSQL_USER: drupal
          MYSQL_PASSWORD: password
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    working_directory: /app
    steps:
      - checkout
      - run: git submodule sync
      - run: git submodule update --init
      - run:
          name: "Setup hosts"
          command: |
            # Since we cant use extra_hosts in circle, DIY the expected host entries
            echo "127.0.0.1      db" >> /etc/hosts
            echo "127.0.0.1      govcms8.local" >> /etc/hosts
      - persist_to_workspace:
          root: /app
          paths:
            - .
      - restore_cache:
          keys:
            - composer-v1-{{ checksum "composer.lock" }}
      - run: rm -rf docroot/themes/custom/dta-gov-au
      - run: composer install -n --prefer-dist --no-progress
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - docroot/core
            - docroot/modules
            - docroot/libraries
            - vendor
      - run: ./scripts/test.sh
      - run:
          name: Install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db to start
          command: dockerize -wait tcp://db:3306 -timeout 1m
      - run: ./.circleci/init.sh
      - run:
          command: apache2ctl -D FOREGROUND
          background: true
      - run: ./scripts/int-test.sh
  deploy:
    docker:
      - image: govau/cf-cli
    working_directory: /app
    steps:
      - attach_workspace:
          at: /app
      - run:
          name: Deploying to cloud.gov.au
          command: ./scripts/deploy.sh
      - run:
          name: Updating configuration and database
          command: ./scripts/start.sh
  cron:
    docker:
      - image: govau/cf-cli
    working_directory: /app
    steps:
      - checkout
      - run:
          name: Running cron
          command: ./scripts/cron.sh
workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only:
                - master
                - develop
  run-cron:
    triggers:
      - schedule:
          cron: "0 * * * *"
          filters:
            branches:
              only:
                - master
                - develop
    jobs:
      - cron
experimental:
  notify:
    branches:
      only:
        - master
        - develop
